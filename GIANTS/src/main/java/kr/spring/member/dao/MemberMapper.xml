<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.spring.member.dao.MemberMapper">
	<!-- 수동 매핑 지정 (일반) -->
	<resultMap type="memberVO" id="memberMap">
		<result property="memberDetailVO.mem_auid" column="mem_auid" />
		<result property="memberDetailVO.mem_name" column="mem_name" />
		<result property="memberDetailVO.mem_public" column="mem_public" />
		<result property="memberDetailVO.mem_phone" column="mem_phone" />
		<result property="memberDetailVO.mem_email" column="mem_email" />
		<result property="memberDetailVO.mem_zipcode" column="mem_zipcode" />
		<result property="memberDetailVO.mem_address1" column="mem_address1" />
		<result property="memberDetailVO.mem_address2" column="mem_address2" />
		<result property="memberDetailVO.mem_photo" column="mem_photo" />
		<result property="memberDetailVO.mem_photoname" column="mem_photoname" />
		<result property="memberDetailVO.mem_point" column="mem_point" />
		<result property="memberDetailVO.mem_regdate" column="mem_regdate" />
		<result property="memberDetailVO.mem_modifydate" column="mem_modifydate" />
	</resultMap>
	
	<!-- 일반 회원가입 -->
	<insert id="insertMember_detail" parameterType="memberVO">
		INSERT INTO MEMBER_DETAIL(
			mem_num,
			mem_name,
			mem_public,
			mem_phone,
			mem_email,
			mem_zipcode,
			mem_address1,
			mem_address2,
			mem_point
		)
		VALUES(
			#{mem_num},
			#{memberDetailVO.mem_name},
			#{memberDetailVO.mem_public},
			#{memberDetailVO.mem_phone},
			#{memberDetailVO.mem_email},
			#{memberDetailVO.mem_zipcode},
			#{memberDetailVO.mem_address1},
			#{memberDetailVO.mem_address2},
			#{memberDetailVO.mem_point}
		)
	</insert>
	
	<!-- 기업회원가입 -->
	<insert id="insertCompany_detail" parameterType="memberVO">
	INSERT INTO COMPANY_DETAIL(
		mem_num,
		comp_owner,
		comp_num,
		comp_name,
		comp_phone,
		comp_cate,
		comp_email,
		comp_zipcode,
		comp_address1,
		comp_address2,
		comp_content
	)
	VALUES(
		#{mem_num},
		#{companyDetailVO.comp_owner},
		#{companyDetailVO.comp_num},
		#{companyDetailVO.comp_name},
		#{companyDetailVO.comp_phone},
		#{companyDetailVO.comp_cate},
		#{companyDetailVO.comp_email},
		#{companyDetailVO.comp_zipcode},
		#{companyDetailVO.comp_address1},
		#{companyDetailVO.comp_address2},
		#{companyDetailVO.comp_content}
	)	
	</insert>
	
	<!-- ID를 이용한 회원정보 체크 -->
	<select id="selectCheckMember" parameterType="string" resultType="memberVO">
		SELECT
			m.mem_num,
			m.mem_id,
			m.mem_auth,
			d.mem_auid,
			m.passwd,
			m.mem_nickname,
			d.mem_email
		FROM
			MEMBER m LEFT OUTER JOIN MEMBER_DETAIL d
		ON
			m.mem_num = d.mem_num
		WHERE
			m.mem_id=#{mem_id}
	</select>
	
	<!-- 회원번호를 이용한 회원정보 구하기 -->
	<select id="selectMember" parameterType="string" resultMap="memberMap">
		SELECT
			*
		FROM
			MEMBER m JOIN MEMBER_DETAIL d
		ON
			m.mem_num=d.mem_num
		WHERE
			m.mem_num=#{mem_num}
	</select>
	<!-- 기업번호를 이용한 회원정보 구하기 -->
	<select id="selectCompany" parameterType="string" resultMap="memberMap">
		SELECT 
			*
		FROM
			MEMBER m JOIN COMPANY_DETAIL c
		ON
			m.mem_num=c.mem_num
		WHERE
			m.mem_num=#{mem_num}
	</select>
</mapper>