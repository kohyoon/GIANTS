<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.spring.goods.dao.GoodsMapper">
	<!-- 상품 정보 등록 -->
	<insert id="insertGoods" parameterType="goodsVO">
		INSERT INTO goods(
			goods_num,
			goods_name,
			goods_category,
			goods_price,
			goods_disc,
			goods_dprice,
			goods_content,
			goods_photo,
			goods_photoname,
			goods_status)
		VALUES(
			#{goods_num},
			#{goods_name},
			#{goods_category},
			#{goods_price},
			#{goods_disc},
			#{goods_dprice},
			#{goods_content},
			#{goods_photo},
			#{goods_photoname},
			#{goods_status})
	</insert>
	
	<!-- 상품 재고 등록 -->
	<insert id="insertGoodsOption" parameterType="goodsOptionVO">
		INSERT INTO 
			goods_option(
				opt_num,
				goods_num, 
				goods_size, 
				goods_stock) 
		VALUES(
				goods_opt_seq.nextval,
      			#{goods_num}, 
      			#{goods_size}, 
      			#{goods_stock})
	</insert>
	
	<!-- 상품 목록 -->
	
	<sql id="goodsSearch">
		<if test="keyword != null and keyword != ''">
			<if test="keyfield == 1">
				AND goods_name LIKE '%' || #{keyword} | '%'
			</if>
			<if test="keyfield == 2">
				AND goods_content LIKE '%' || #{keyword} | '%'
			</if>
			<if test="keyfield == 3">
				AND (goods_name LIKE '%' || #{keyword} | '%' OR goods_content LIKE '%' || #{keyword} | '%') 
			</if>
		</if>
	</sql>
	
	<sql id="goodsOrder">
		<if test="order == 1">
			ORDER BY goods_num DESC
		</if>
		<if test="order == 2">
			ORDER BY fav_cnt DESC
		</if>
		<if test="order == 3">
			ORDER BY review_cnt DESC
		</if>
	</sql>
	  
	<!-- 전체/검색 레코드 수 -->
	<select id="selectGoodsRowCount" parameterType="map" resultType="integer">
		SELECT 
			count(*) 
		FROM goods
		<include refid="goodsSearch"></include>
	</select>
	 
	<!-- 전체/검색 목록 -->
	<select id="selectGoodsList" parameterType="map" resultType="goodsVO">
		SELECT
			*
		FROM (SELECT
				a.*,
				rownum rnum
			  FROM(SELECT
			  			*
			  	   FROM goods g
			  	   <include refid="goodsSearch"></include>
			  	   <include refid="goodsOrder"></include>
			  	   )a)
		<![CDATA[
		WHERE rnum >= #{start} AND rnum <= #{end}
		]]>
	</select>
	
	<!-- 상품 재고 목록 -->
	<select id="selectOptionList" parameterType="integer" resultType="goodsOptionVO">
		SELECT
			*
		FROM goods_option
		WHERE goods_num=#{goods_num}
	</select>
	
	<!-- 상품 정보 수정 -->
	<update id="updateGoods" parameterType="goodsVO">
		UPDATE 
			goods
		SET
			goods_name=#{goods_name},
			goods_price=#{goods_price},
			goods_disc=#{goods_disc},
			goods_dprice=#{goods_dprice},
			goods_content=#{goods_content},
			goods_photo=#{goods_photo},
			goods_photoname=#{goods_photoname},
			goods_mdate=sysdate,
			goods_status=#{goods_status}
		WHERE goods_num=#{goods_num}
	</update>
	
	<!-- 상품 재고 수정 -->
	<update id="updateOption" parameterType="goodsOptionVO">
		UPDATE 
			goods_option
		SET
			goods_stock=#{goods_stock}
		WHERE goods_num=#{goods_num} AND goods_size=#{goods_size}
	</update>
	
	<!-- //======리뷰======// -->
	<!-- 리뷰 등록 -->
	<insert id="insertGoodReview" parameterType="goodsReviewVO">
		INSERT INTO 
			goods_review(
				review_num,
				mem_num,
				goods_num,
				review_title,
				review_score,
				review_content,
				review_photo,
				review_photoname,
				review_ip)
		VALUES(
			goods_review_seq.nextval,
			#{mem_num},
			#{goods_num},
			#{review_title},
			#{review_score},
			#{review_content},
			#{review_photo},
			#{review_photoname},
			#{review_ip})
	</insert>
	
	<!-- 리뷰 레코드 수 -->
	<select id="selectGreviewRowCount" parameterType="integer" resultType="integer">
		SELECT 
			count(*) 
		FROM 
			goods_review
		WHERE goods_num=#{goods_num}
	</select>
	
	<!-- 리뷰 목록 -->
	<select id="selectGoodsReviewList" parameterType="map" resultType="goodsReviewVO">
		SELECT 
			*
		FROM(SELECT
				a.*,
				rownum rnum
			 FROM(SELECT
			 		*
			 	  FROM goods_review g JOIN member m
			 	  ON g.mem_num=m.mem_num
			 	  WHERE goods_num=#{goods_num}
			 	  ORDER BY review_regdate DESC)a)
		<![CDATA[
		WHERE rnum >= #{start} AND rnum <= #{end}
		]]>
	</select>
	
	<!-- =====굿즈 문의===== -->
	<!-- 문의 등록 -->
	<insert id="insertGoodsQna" parameterType="goodsQnaVO">
		INSERT INTO
			goods_qna(
				qna_num,
				qna_title,
				qna_content,
				mem_num,
				goods_num,
				qna_ip)
		VALUES(
			goods_qna_seq.nextval,
			#{qna_title},
			#{qna_content},
			#{mem_num},
			#{goods_num},
			#{qna_ip})
	</insert>
	
	<!-- 문의 목록 -->
	<select id="selectGoodsQnaList" parameterType="map" resultType="goodsQnaVO">
		SELECT
			*
		FROM(SELECT
				a.*,
				rownum rnum
			 FROM(SELECT
			 		*
			 	  FROM goods_qna q JOIN member m
			 	  ON q.mem_num=m.mem_num
			 	  WHERE goods_num=#{goods_num})a)
		<![CDATA[
		WHERE rnum >= #{start} AND rnum <= #{end}
		]]>
	</select>
	
	<!-- 문의 상세페이지 -->
	<select id="selectQna">
		SELECT
			*
		FROM goods_qna q JOIN member m
		USING(mem_num)
		WHERE q.qna_num=#{qna_num}
	</select>
	
</mapper>